referrerpolicy属性用于控制浏览器在发送 HTTP 请求时，如何设置 Referer 头部信息。
通过该属性，可以指定当用户点击链接或加载资源时，
浏览器应如何传递“来源”（referer）信息，从而在保护隐私与保持网站间关联性之间取得平衡。

## 1. 作用与意义

- **保护隐私**：通过限制或不发送 Referer 信息，可以防止目标网站获得用户来源页面的 URL，从而保护用户隐私。
- **安全性**：在某些情况下，隐藏 Referer 信息也有助于避免敏感信息泄露或防止恶意网站利用来源信息进行攻击。
- **流量统计控制**：网站管理员可以通过调整 Referer 信息，影响第三方网站的访问统计数据。

---

## 2. 支持的取值

根据 [Referrer Policy 规范](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Referrer-Policy)（详见 citeturn1search7），referrerpolicy 属性可设置以下值：

- **no-referrer**  
  - 完全不发送 Referer 信息，即使是在同源请求中也不发送。

- **no-referrer-when-downgrade**  
  - 默认行为：在从 HTTPS 页面跳转到 HTTP 页面时，不发送 Referer；其他情况下发送完整 URL。

- **origin**  
  - 仅发送源（协议、主机和端口），而不包含路径和查询字符串。

- **origin-when-cross-origin**  
  - 同源请求时发送完整 URL；跨域请求时仅发送源信息。

- **same-origin**  
  - 仅当请求为同源时发送 Referer，跨域请求则不发送任何信息。

- **strict-origin**  
  - 与 origin 类似，但如果从 HTTPS 页面跳转到 HTTP 页面，则不发送 Referer 信息。

- **strict-origin-when-cross-origin**  
  - 同源请求时发送完整 URL；跨域请求时如果协议不降级则发送源信息，否则不发送 Referer。

- **unsafe-url**  
  - 始终发送完整 URL，即使在从 HTTPS 到 HTTP 的降级请求中也发送（不建议使用，存在安全风险）。

---

## 3. 如何在 HTML 与 JS 中使用

### 在 HTML 标签中使用

可直接在支持该属性的标签（如 `<a>`、`<iframe>`、`<img>` 等）中设置：

```html
<a href="https://example.com" target="_blank" referrerpolicy="no-referrer">不发送 Referer 的链接</a>
```

### 在 JavaScript 中设置

通过 DOM 对象访问元素的 `referrerPolicy` 属性进行读写操作。例如：

```javascript
// 获取一个链接元素
const link = document.querySelector('a');

// 读取当前 referrerPolicy 值
console.log(link.referrerPolicy);

// 设置 referrerPolicy
link.referrerPolicy = 'origin';
```

---

## 4. 浏览器兼容性与实际影响

- **兼容性**：现代主流浏览器均支持 referrerpolicy 属性，具体支持情况可参考 MDN 文档（详见 citeturn1search10）。
- **实际效果**：设置后，当用户点击链接或加载资源时，浏览器会按照指定策略设置 HTTP 请求中的 Referer 头，影响目标服务器获取到的来源信息。这对数据统计、隐私保护和安全性都有一定影响。

---

## 5. 总结

- **referrerpolicy** 属性为开发者提供了一种精细控制 HTTP Referer 信息传递的手段。  
- 根据实际需求，可以选择不同的策略（例如 no-referrer、origin、same-origin 等），在保护用户隐私的同时，确保必要的来源信息传递。  
- 可在 HTML 标签中直接设置，也可以通过 JavaScript 动态修改。  
- 合理配置该属性对提高网站安全性、保护用户隐私以及维护数据统计准确性具有重要意义。

